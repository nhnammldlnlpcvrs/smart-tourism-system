'''
from openai import OpenAI
from weather_api import WeatherAPI

# T·∫°o client (nh·ªõ set m√¥i tr∆∞·ªùng: setx OPENAI_API_KEY "key_c·ªßa_b·∫°n")
client = OpenAI()
weather_api = WeatherAPI()

class LLMAgent:
    def __init__(self):
        self.locations = {
            "hanoi": (21.0285, 105.8542),
            "hochiminh": (10.7626, 106.6602),
            "danang": (16.0544, 108.2022)
        }

    def handle_query(self, query: str):
        """X·ª≠ l√Ω truy v·∫•n c·ªßa ng∆∞·ªùi d√πng."""
        query_lower = query.lower()
        for city in self.locations:
            if city in query_lower:
                lat, lon = self.locations[city]
                weather = weather_api.get_weather(lat, lon)
                if "error" in weather:
                    return "Xin l·ªói, t√¥i kh√¥ng th·ªÉ l·∫•y d·ªØ li·ªáu th·ªùi ti·∫øt."
                return f"üå§ Th·ªùi ti·∫øt ·ªü {city.title()} hi·ªán t·∫°i: {weather['temperature']}¬∞C, gi√≥ {weather['windspeed']} km/h, l√∫c {weather['time']}."
        
        # N·∫øu kh√¥ng c√≥ th√†nh ph·ªë trong c√¢u h·ªèi ‚Üí chuy·ªÉn qua LLM ƒë·ªÉ tr·∫£ l·ªùi b√¨nh th∆∞·ªùng
        response = client.chat.completions.create(
            model="gpt-4o-mini",
            messages=[{"role": "user", "content": query}]
        )
        return response.choices[0].message.content

        

from openai import OpenAI
from weather_api import WeatherAPI

# T·∫°o client OpenAI (nh·ªõ set bi·∫øn m√¥i tr∆∞·ªùng OPENAI_API_KEY)
client = OpenAI()
weather_api = WeatherAPI()

class LLMAgent:
    def __init__(self):
        self.locations = {
            "hanoi": (21.0285, 105.8542),
            "hochiminh": (10.7626, 106.6602),
            "danang": (16.0544, 108.2022)
        }

    def handle_query(self, query: str):
        query_lower = query.lower()
        for city in self.locations:
            if city in query_lower:
                lat, lon = self.locations[city]
                weather = weather_api.get_weather(lat, lon)
                if "error" in weather:
                    return "Xin l·ªói, t√¥i kh√¥ng th·ªÉ l·∫•y d·ªØ li·ªáu th·ªùi ti·∫øt."
                return f"üå§ Th·ªùi ti·∫øt ·ªü {city.title()} hi·ªán t·∫°i: {weather['temperature']}¬∞C, gi√≥ {weather['windspeed']} km/h, l√∫c {weather['time']}."
        
        # N·∫øu kh√¥ng ph·∫£i c√¢u h·ªèi th·ªùi ti·∫øt, g·ªçi LLM tr·∫£ l·ªùi
        response = client.chat.completions.create(
            model="gpt-4o-mini",
            messages=[{"role": "user", "content": query}]
        )
        return response.choices[0].message.content

        
        '''

from openai import OpenAI
from .weather_api import WeatherAPI  # <- ch√∫ √Ω import t∆∞∆°ng ƒë·ªëi

# Kh·ªüi t·∫°o client OpenAI
client = OpenAI()
weather_api = WeatherAPI()

class LLMAgent:
    def __init__(self):
        # To·∫° ƒë·ªô 3 th√†nh ph·ªë ch√≠nh
        self.locations = {
            "hanoi": (21.0285, 105.8542),
            "hochiminh": (10.7626, 106.6602),
            "danang": (16.0544, 108.2022)
        }

    def handle_query(self, query: str):
        """X·ª≠ l√Ω truy v·∫•n ng∆∞·ªùi d√πng (th·ªùi ti·∫øt ho·∫∑c h·ªèi LLM)"""
        query_lower = query.lower()
        for city in self.locations:
            if city in query_lower:
                lat, lon = self.locations[city]
                weather = weather_api.get_weather(lat, lon)
                if "error" in weather:
                    return "Xin l·ªói, t√¥i kh√¥ng th·ªÉ l·∫•y d·ªØ li·ªáu th·ªùi ti·∫øt."
                return f"üå§ Th·ªùi ti·∫øt ·ªü {city.title()} hi·ªán t·∫°i: {weather['temperature']}¬∞C, gi√≥ {weather['windspeed']} km/h, l√∫c {weather['time']}."
        
        # N·∫øu kh√¥ng ph·∫£i c√¢u h·ªèi th·ªùi ti·∫øt ‚Üí g·ª≠i qua LLM
        response = client.chat.completions.create(
            model="gpt-4o-mini",
            messages=[{"role": "user", "content": query}]
        )
        return response.choices[0].message.content
