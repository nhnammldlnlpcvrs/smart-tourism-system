
'''
import requests
import json

def get_city_coordinates(city_name: str):
    """T√¨m to·∫° ƒë·ªô (lat, lon) c·ªßa th√†nh ph·ªë b·∫±ng Open-Meteo Geocoding API"""
    url = "https://geocoding-api.open-meteo.com/v1/search"
    params = {"name": city_name, "count": 1, "language": "vi", "format": "json"}

    response = requests.get(url, params=params)
    data = response.json()

    if "results" not in data:
        return None

    city = data["results"][0]
    return {
        "name": city["name"],
        "country": city.get("country", ""),
        "latitude": city["latitude"],
        "longitude": city["longitude"]
    }

def get_weather(city_name: str):
    """L·∫•y th·ªùi ti·∫øt hi·ªán t·∫°i cho 1 th√†nh ph·ªë t·ª´ Open-Meteo"""
    coords = get_city_coordinates(city_name)
    if not coords:
        return {"status": "error", "message": f"Kh√¥ng t√¨m th·∫•y th√†nh ph·ªë: {city_name}"}

    url = "https://api.open-meteo.com/v1/forecast"
    params = {
        "latitude": coords["latitude"],
        "longitude": coords["longitude"],
        "current_weather": True,
        "timezone": "auto"
    }

    response = requests.get(url, params=params)
    data = response.json()

    if "current_weather" not in data:
        return {"status": "error", "message": "Kh√¥ng l·∫•y ƒë∆∞·ª£c d·ªØ li·ªáu th·ªùi ti·∫øt."}

    weather = data["current_weather"]

    # M√£ th·ªùi ti·∫øt (weathercode) -> m√¥ t·∫£ ti·∫øng Vi·ªát
    weather_codes = {
        0: "Tr·ªùi quang ƒë√£ng",
        1: "Tr·ªùi h·∫ßu nh∆∞ quang",
        2: "C√≥ m√¢y nh·∫π",
        3: "Nhi·ªÅu m√¢y",
        45: "S∆∞∆°ng m√π",
        48: "S∆∞∆°ng m√π c√≥ s∆∞∆°ng gi√°",
        51: "M∆∞a ph√πn nh·∫π",
        53: "M∆∞a ph√πn v·ª´a",
        55: "M∆∞a ph√πn d√†y",
        61: "M∆∞a nh·∫π",
        63: "M∆∞a v·ª´a",
        65: "M∆∞a to",
        71: "Tuy·∫øt r∆°i nh·∫π",
        73: "Tuy·∫øt v·ª´a",
        75: "Tuy·∫øt d√†y",
        95: "C√≥ d√¥ng",
        99: "D√¥ng m·∫°nh k√®m m∆∞a ƒë√°"
    }

    code = weather.get("weathercode", -1)
    description = weather_codes.get(code, "Kh√¥ng x√°c ƒë·ªãnh")

    result = {
        "status": "success",
        "city": coords["name"],
        "country": coords["country"],
        "temperature": weather["temperature"],
        "windspeed": weather["windspeed"],
        "weather_description": description,
        "time": weather["time"],
        "source": "Open-Meteo"
    }

    return result


# üå§Ô∏è Demo: ch·∫°y tr·ª±c ti·∫øp
if __name__ == "__main__":
    city = input("Nh·∫≠p t√™n th√†nh ph·ªë: ")
    info = get_weather(city)
    print(json.dumps(info, ensure_ascii=False, indent=2))

    


import requests

class WeatherAPI:
    BASE_URL = "https://api.open-meteo.com/v1/forecast"

    def get_weather(self, latitude: float, longitude: float):
        """L·∫•y th√¥ng tin th·ªùi ti·∫øt hi·ªán t·∫°i t·ª´ Open-Meteo."""
        params = {
            "latitude": latitude,
            "longitude": longitude,
            "current_weather": True
        }
        response = requests.get(self.BASE_URL, params=params)
        data = response.json()

        if "current_weather" in data:
            cw = data["current_weather"]
            return {
                "temperature": cw["temperature"],
                "windspeed": cw["windspeed"],
                "weathercode": cw["weathercode"],
                "time": cw["time"]
            }
        else:
            return {"error": "Kh√¥ng l·∫•y ƒë∆∞·ª£c d·ªØ li·ªáu th·ªùi ti·∫øt."}



import requests

class WeatherAPI:
    BASE_URL = "https://api.open-meteo.com/v1/forecast"

    def get_weather(self, latitude: float, longitude: float):
        """G·ªçi API Open-Meteo ƒë·ªÉ l·∫•y th·ªùi ti·∫øt hi·ªán t·∫°i"""
        params = {
            "latitude": latitude,
            "longitude": longitude,
            "current_weather": True
        }
        response = requests.get(self.BASE_URL, params=params)
        data = response.json()

        if "current_weather" in data:
            cw = data["current_weather"]
            return {
                "temperature": cw["temperature"],
                "windspeed": cw["windspeed"],
                "weathercode": cw["weathercode"],
                "time": cw["time"]
            }
        else:
            return {"error": "Kh√¥ng l·∫•y ƒë∆∞·ª£c d·ªØ li·ªáu th·ªùi ti·∫øt."}
'''


import requests

class WeatherAPI:
    BASE_URL = "https://api.open-meteo.com/v1/forecast"

    def get_weather(self, latitude: float, longitude: float):
        """G·ªçi Open-Meteo API ƒë·ªÉ l·∫•y d·ªØ li·ªáu th·ªùi ti·∫øt hi·ªán t·∫°i"""
        params = {
            "latitude": latitude,
            "longitude": longitude,
            "current_weather": True
        }
        response = requests.get(self.BASE_URL, params=params)
        data = response.json()

        if "current_weather" in data:
            cw = data["current_weather"]
            return {
                "temperature": cw["temperature"],
                "windspeed": cw["windspeed"],
                "weathercode": cw["weathercode"],
                "time": cw["time"]
            }
        else:
            return {"error": "Kh√¥ng l·∫•y ƒë∆∞·ª£c d·ªØ li·ªáu th·ªùi ti·∫øt."}
